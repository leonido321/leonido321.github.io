# Generated by Django 5.2.5 on 2025-09-02 16:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gamification', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BattleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название батла')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('stars_reward', models.JSONField(default=dict, help_text='Формат: {"1": 10, "2": 5, "3": 2}', verbose_name='Награды (JSON: {1: 10, 2: 5})')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='performance_data/')),
                ('processed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Данные эффективности',
                'verbose_name_plural': 'Данные эффективности',
            },
        ),
        migrations.AlterModelOptions(
            name='userprofile',
            options={'ordering': ['-stars'], 'verbose_name': 'Профиль пользователя', 'verbose_name_plural': 'Профили пользователей'},
        ),
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('start_time', models.DateTimeField(verbose_name='Начало')),
                ('end_time', models.DateTimeField(verbose_name='Конец')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('participants', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('battle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.battletype')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('battle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gamification.battle')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BattleResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(verbose_name='Счёт')),
                ('position', models.PositiveIntegerField(blank=True, null=True, verbose_name='Место')),
                ('battle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.battle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score'],
                'unique_together': {('battle', 'user')},
            },
        ),
    ]
